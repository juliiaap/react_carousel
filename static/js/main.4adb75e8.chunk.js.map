{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["gap","Carousel","intervalId","showNext","props","infinite","clearInterval","carousel","document","querySelector","scrollValue","itemWidth","step","scrollTo","left","Math","ceil","scrollLeft","behavior","showPrevious","scroll","scrollWidth","clientWidth","nextButton","prevButton","setTimeout","classList","add","remove","this","window","setInterval","animationDuration","prevProps","images","frameSize","containerWidth","className","style","width","onScroll","e","currentTarget","map","image","src","alt","type","name","onClick","React","Component","App","state","setStep","stepValue","setState","Number","value","setFrameSize","frameSizeValue","setItemWidth","itemWidthValue","setAnimationDuration","animationDurationValue","buttons","querySelectorAll","forEach","button","addEventListener","length","htmlFor","id","defaultValue","min","onChange","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4adb75e8.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst gap = 10;\n\nclass Carousel extends React.Component<Props> {\n  intervalId = 0;\n\n  componentDidMount() {\n    this.intervalId = window.setInterval(() => {\n      this.showNext();\n    }, this.props.animationDuration);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.animationDuration === this.props.animationDuration) {\n      return;\n    }\n\n    clearInterval(this.intervalId);\n\n    this.intervalId = window.setInterval(() => {\n      this.showNext();\n    }, this.props.animationDuration);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  showNext = () => {\n    if (this.props.infinite) {\n      clearInterval(this.intervalId);\n    }\n\n    const carousel: HTMLUListElement | null\n      = document.querySelector('.Carousel__list');\n\n    if (!carousel) {\n      return;\n    }\n\n    const scrollValue = (this.props.itemWidth + gap) * this.props.step;\n\n    carousel.scrollTo({\n      left: Math.ceil(carousel.scrollLeft) + scrollValue,\n      behavior: 'smooth',\n    });\n  };\n\n  showPrevious = () => {\n    if (this.props.infinite) {\n      clearInterval(this.intervalId);\n    }\n\n    const carousel: HTMLUListElement | null\n      = document.querySelector('.Carousel__list');\n\n    if (!carousel) {\n      return;\n    }\n\n    const scrollValue = (this.props.itemWidth + gap) * this.props.step;\n\n    carousel.scrollTo({\n      left: Math.ceil(carousel.scrollLeft) - scrollValue,\n      behavior: 'smooth',\n    });\n  };\n\n  scroll = (scrollLeft: number, scrollWidth: number, clientWidth: number) => {\n    const nextButton = document.querySelector('.Carousel__button--next');\n    const prevButton = document.querySelector('.Carousel__button--prev');\n\n    if (!this.props.infinite && Math.ceil(scrollLeft) === (scrollWidth\n      - clientWidth)) {\n      const carousel: HTMLUListElement | null\n        = document.querySelector('.Carousel__list');\n\n      if (!carousel) {\n        return;\n      }\n\n      setTimeout(() => {\n        carousel.scrollTo({\n          left: 0,\n          behavior: 'smooth',\n        });\n      }, 2000);\n    }\n\n    if (Math.ceil(scrollLeft) === (scrollWidth\n      - clientWidth)) {\n      nextButton?.classList.add('disabled');\n    } else if (scrollLeft === 0) {\n      prevButton?.classList.add('disabled');\n    } else {\n      nextButton?.classList.remove('disabled');\n      prevButton?.classList.remove('disabled');\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n    } = this.props;\n    const containerWidth = frameSize * (itemWidth + gap) - gap;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: `${containerWidth}px` }}\n          onScroll={(e) => {\n            this.scroll(e.currentTarget.scrollLeft,\n              e.currentTarget.scrollWidth,\n              e.currentTarget.clientWidth);\n          }}\n        >\n          {images.map((image) => (\n            <li className=\"Carousel__item\" key={image}>\n              <img\n                src={image}\n                alt={image}\n                className=\"Carousel__image\"\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons-container\">\n          <button\n            type=\"button\"\n            name=\"Prev\"\n            onClick={this.showPrevious}\n            className=\"Carousel__button Carousel__button--prev disabled\"\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            name=\"Next\"\n            onClick={this.showNext}\n            className=\"Carousel__button Carousel__button--next\"\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  componentDidMount() {\n    const buttons: NodeListOf<HTMLButtonElement> | []\n      = document.querySelectorAll('.Carousel__button');\n\n    if (!buttons) {\n      return;\n    }\n\n    buttons.forEach(button => button.addEventListener('click', () => {\n      this.setState({ infinite: true });\n    }));\n  }\n\n  setStep = () => {\n    const stepValue: HTMLInputElement | null\n      = document.querySelector('#stepId');\n\n    if (!stepValue) {\n      return;\n    }\n\n    this.setState({ step: Number(stepValue.value) });\n  };\n\n  setFrameSize = () => {\n    const frameSizeValue: HTMLInputElement | null\n      = document.querySelector('#frameId');\n\n    if (!frameSizeValue) {\n      return;\n    }\n\n    this.setState({ frameSize: Number(frameSizeValue.value) });\n  };\n\n  setItemWidth = () => {\n    const itemWidthValue: HTMLInputElement | null\n      = document.querySelector('#itemId');\n\n    if (!itemWidthValue) {\n      return;\n    }\n\n    this.setState({ itemWidth: Number(itemWidthValue.value) });\n  };\n\n  setAnimationDuration = () => {\n    const animationDurationValue: HTMLInputElement | null\n      = document.querySelector('#AnimationDuration');\n\n    if (!animationDurationValue) {\n      return;\n    }\n\n    this.setState({ animationDuration: Number(animationDurationValue.value) });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <div className=\"App__inputs\">\n          <label htmlFor=\"itemId\">ItemWidth: </label>\n          <input\n            type=\"number\"\n            name=\"ItemWidth\"\n            id=\"itemId\"\n            defaultValue={130}\n            min=\"1\"\n            className=\"App__item\"\n            onChange={this.setItemWidth}\n          />\n          <label htmlFor=\"frameId\">FrameSize: </label>\n          <input\n            type=\"number\"\n            name=\"FrameSize\"\n            id=\"frameId\"\n            min=\"1\"\n            defaultValue={3}\n            className=\"App__item\"\n            onChange={this.setFrameSize}\n          />\n          <label htmlFor=\"stepId\">Step: </label>\n          <input\n            type=\"number\"\n            name=\"Step\"\n            id=\"stepId\"\n            min=\"1\"\n            defaultValue={3}\n            className=\"App__item\"\n            onChange={this.setStep}\n          />\n          <label htmlFor=\"AnimationDuration\">AnimationDuration: </label>\n          <input\n            type=\"number\"\n            name=\"AnimationDuration\"\n            id=\"AnimationDuration\"\n            defaultValue={1000}\n            className=\"App__item\"\n            onChange={this.setAnimationDuration}\n          />\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}